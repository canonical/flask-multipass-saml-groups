# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tool.bandit]
exclude_dirs = ["/venv/"]
[tool.bandit.assert_used]
skips = ["*/*test.py", "*/test_*.py", "*tests/*.py"]

# Testing tools configuration
[tool.coverage.run]
branch = true

# Formatting tools configuration
[tool.black]
line-length = 99
target-version = ["py38"]

[tool.coverage.report]
fail_under = 95
show_missing = true

# Linting tools configuration
[tool.flake8]
max-line-length = 99
max-doc-length = 99
max-complexity = 10
exclude = [".git", "__pycache__", ".tox", "build", "dist", "*.egg_info", "venv"]
select = ["E", "W", "F", "C", "N", "R", "D", "H"]
# Ignore W503, E501 because using black creates errors with this
# Ignore D107 Missing docstring in __init__
ignore = ["W503", "E501", "D107"]
# D100, D101, D102, D103: Ignore missing docstrings in tests
per-file-ignores = ["tests/*:D100,D101,D102,D103,D104,D205,D212,D415"]
docstring-convention = "google"
# Check for properly formatted copyright header in each file
copyright-check = "True"
copyright-author = "Canonical Ltd."
copyright-regexp = "Copyright\\s\\d{4}([-,]\\d{4})*\\s+%(author)s"

[tool.isort]
line_length = 99
profile = "black"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
log_cli_level = "INFO"
markers = [
    "requires_secrets: mark tests that require external secrets"
]

[tool.pylint]
disable = "wrong-import-order"

[tool.poetry]
name = "flask-multipass-saml-groups"
version = "0.3.0"
description = "This package provides an identity provider for Flask-Multipass, which allows you to use SAML groups. It is designed to be used as a plugin for Indico."
authors = ["canonical-is-devops <is-devops-team@canonical.com>"]
license = "Apache-2.0 license"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
flask-multipass = {extras = ["saml"], version = "0.4.9"}
# The package version here can force an upgrade of indico when the plugin is used
# thus we must only specify compatibility rather than pinning the exact version
indico = ">=3.2.8, <4"
flask_sqlalchemy = "3.0.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
